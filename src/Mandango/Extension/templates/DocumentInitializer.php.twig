<?php

    /**
     * Validate document data
     *
     * Override this method for actual validation / filtering
     *
     * @param array $data The document data to initialize the document
     */
    public function validate($data)
    {
        return $data;
    }

    /**
     * Initialize the document with data.
     *
     * It runs the valudator/filter method validate()
     *
     * If the object has already been initialized or saved, it
     * overwrites the fields with the data provided.
     */
    public function initialize($data = array())
    {
        // TODO: check data
        // TODO: initialize embeds
        // TODO: initialize references
        if (empty($data)) {
            return;
        }

        $data = $this->validate($data);

        // Fields
{% for name, field in config_class.fields %}
        if (array_key_exists('{{name}}', $data)) {
            $this->set{{ name|ucfirst }}($data['{{name}}']);
        }
{% endfor %}
        // EmbeddesOne
{% for name, embedded in config_class.embeddedsOne %}
        if (array_key_exists('{{name}}', $data)) {
            $this->set{{ name|ucfirst }}($this->getMandango()->create('{{embedded.class|addslashes}}', $data['{{name}}']));
        }
{% endfor %}
        // EmbeddedsMany
{% for name, embedded in config_class.embeddedsMany %}
        if (array_key_exists('{{name}}', $data)) {
            if (!is_array($data['{{name}}'])) {
                $data['{{name}}'] = [$data['{{name}}']];
            }
            $newEmbeddeds = [];
            foreach ($data['{{name}}'] as $value) {
                $newEmbeddeds[] = $this->getMandango()->create('{{embedded.class|addslashes}}', $value);
            }
            $this->get{{ name|ucfirst }}()->replace($newEmbeddeds);
        }
{% endfor %}
    }
