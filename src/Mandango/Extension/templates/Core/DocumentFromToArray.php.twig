<?php

    /**
     * Imports data from an array.
     *
     * @param array $array An array.
     *
     * @return \{{ class }} The document (fluent interface).
     */
    public function fromArray(array $array)
    {
{# inheritance #}
{% if config_class.inheritance %}
        parent::fromArray($array);
{% elseif not config_class.isEmbedded %}
        if (isset($array['_id'])) {
            $this->setId($array['_id']);
        }
{% endif %}
{# fields #}
{% for name, field in config_class.fields %}
{% if field.inherited is not defined or not field.inherited %}
        if (isset($array['{{ name }}'])) {
            $this->set{{ name|ucfirst }}($array['{{ name }}']);
        }
{% endif %}
{% endfor %}
{# references one #}
{% for name, reference in config_class.referencesOne %}
{% if reference.inherited is not defined or not reference.inherited %}
        if (isset($array['{{ name }}'])) {
            $this->set{{ name|ucfirst }}($array['{{ name }}']);
        }
{% endif %}
{% endfor %}
{# references Many #}
{% for name, reference in config_class.referencesMany %}
{% if reference.inherited is not defined or not reference.inherited %}
        if (isset($array['{{ name }}'])) {
            $this->remove{{ name|ucfirst }}($this->get{{ name|ucfirst }}()->all());
            $this->add{{ name|ucfirst }}($array['{{ name }}']);
        }
{% endif %}
{% endfor %}
{# embeddeds one #}
{% for name, embedded in config_class.embeddedsOne %}
{% if embedded.inherited is not defined or not embedded.inherited %}
        if (isset($array['{{ name }}'])) {
            $embedded = new \{{ embedded.class }}($this->getMandango());
            $embedded->fromArray($array['{{ name }}']);
            $this->set{{ name|ucfirst }}($embedded);
        }
{% endif %}
{% endfor %}
{# embeddeds many #}
{% for name, embedded in config_class.embeddedsMany %}
{% if embedded.inherited is not defined or not embedded.inherited %}
        if (isset($array['{{ name }}'])) {
            $embeddeds = array();
            foreach ($array['{{ name }}'] as $documentData) {
                $embeddeds[] = $embedded = new \{{ embedded.class }}($this->getMandango());
                $embedded->setDocumentData($documentData);
            }
            $this->get{{ name|ucfirst }}()->replace($embeddeds);
        }
{% endif %}
{% endfor %}

        return $this;
    }

    /**
     * Export the document data to an array.
     *
     * @param array $fields List of returning fields. array(*) will return recursively all the fields.
     *
     * @return array An array with the document data.
     */
    public function toArray($fields = array())
    {
        if ($fields === true) {
            $fields = array('*');
        }

{# inheritance #}
{% if config_class.inheritance %}
        $array = parent::toArray($fields, $fields);
{% elseif config_class.isEmbedded %}
        $array = array();
{% else %}
        $array = array();
        $id = $this->getId();
        if ($id instanceof \MongoId) {
            $id = $id->{'$id'};
        }

        $withFields = empty($fields) || in_array('*', $fields) || in_array('_id', $fields);
        if ($withFields) {
            $array['_id'] = $id;
        }
{% endif %}

{# fields #}
{% for name, field in config_class.fields %}
{% if field.inherited is not defined or not field.inherited %}
{# no reference field #}
{% if field.referenceField is not defined %}
        // There wasn't filter
        if (empty($fields) || in_array('*', $fields) || in_array('{{ name }}', $fields)) {
            $array['{{ name }}'] = $this->get{{ name|ucfirst }}();
        }
{# reference field #}
{% else %}
        $withReferenceFields = in_array('*', $fields) || in_array('{{ name }}', $fields);
        if ($withReferenceFields) {
            $array['{{ name }}'] = $this->get{{ name|ucfirst }}();
        }
{% endif %}
{% endif %}
{% endfor %}
{# references one #}
{% for name, reference in config_class.referencesOne %}
{% if reference.inherited is not defined or not reference.inherited %}
        $withReferenceFields = in_array('*', $fields) || in_array('{{ name }}', $fields) || array_key_exists('{{ name }}', $fields);
        if ($withReferenceFields) {
            $document = $this->get{{ name | ucfirst }}();
            if (!empty($document)) {
                $referenceFields = isset($fields['{{name}}']) ? $fields['{{name}}'] : array('*');
                $array['{{name}}'] = $document->toArray($referenceFields);
            } else {
                $array['{{name}}'] = null;
            }
        }
{% endif %}
{% endfor %}
{# references Many #}
{% for name, reference in config_class.referencesMany %}
{% if reference.inherited is not defined or not reference.inherited %}
        $withReferenceFields = in_array('*', $fields) || in_array('{{ name }}', $fields) || array_key_exists('{{ name }}', $fields);
        if ($withReferenceFields) {
            $referenceFields = isset($fields['{{name}}']) ? $fields['{{name}}'] : array('*');
            $array['{{name}}'] = $this->get{{ name | ucfirst }}()->toArray($referenceFields);
        }
{% endif %}
{% endfor %}
{# embeddeds one #}
{% for name, embedded in config_class.embeddedsOne %}
{% if embedded.inherited is not defined or not embedded.inherited %}
        $document   = $this->get{{ name | ucfirst }}();
        $withFields = empty($fields) || in_array('*', $fields) || in_array('{{ name }}', $fields) || array_key_exists('{{ name }}', $fields);
        if ($withFields) {
            if (!empty($document)) {
                $embeddedFields = isset($fields['{{name}}']) ? $fields['{{name}}'] : array('*');
                $array['{{name}}'] = $document->toArray($embeddedFields);
            } else {
                $array['{{name}}'] = null;
            }
        }
{% endif %}
{% endfor %}
{# embeddeds many #}
{% for name, embedded in config_class.embeddedsMany %}
{% if embedded.inherited is not defined or not embedded.inherited %}
        $withFields = empty($fields) || in_array('*', $fields) || in_array('{{ name }}', $fields) || array_key_exists('{{ name }}', $fields);
        if ($withFields) {
            $embeddedFields = array_key_exists('{{ name }}', $fields) ? $fields['{{name}}'] : array('*');
            $array['{{name}}'] = $this->get{{ name | ucfirst }}()->toArray($embeddedFields);
        }
{% endif %}

{% endfor %}

        return $array;
    }
